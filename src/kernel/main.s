.CODE32
.GLOBL _start
.EXTERN ISR_BEGIN
.SECTION .kmain
_start:
	MOV $0xB8000, %EBX
	MOV $TEXT, %SI
	PRINT_LOOP:
		LODSB
		OR %AL, %AL
		JE .DONE
		MOV $0x0F, %AH
		MOV %AX, (%EBX)
		ADD $2, %EBX
		JMP PRINT_LOOP
	.DONE:

	MOV $31, %ECX
	FILL_IDT:
	MOV %CX, %AX
	SHL $3, %AX
	LEA IDT_START, %BX
	ADD %AX, %BX
	MOV %BX, %DI
	LEA OFFSET_LOW, %EBX
	LEA ISR_BEGIN, %EAX
	MOV %ECX, %EDX
	SHL $4, %EDX
	ADD %EDX, %EAX
	MOV %AX, (%EBX)
	SHR $16, %EAX
	LEA OFFSET_HIGH, %EBX
	MOV %AX, (%EBX)
	LEA IDT_ENTRY, %SI
	LODSL
	STOSL
	LODSL
	STOSL
	LOOP FILL_IDT
	LIDT (IDTR)
	STI

LOOP:
	JMP LOOP

TEST_ISR:
	PUSHA
	MOV $0x0F6F0F68, %EAX
	MOV $0xB8008, %EBX
	MOV %EAX, (%EBX)
	POPA
	IRET

//.SECTION .data
IDT_ENTRY:
	OFFSET_LOW: .WORD 0x0000
	SS: .WORD 0x0008
	RESERVED: .BYTE 0x00
	FLAGS: .BYTE 0x8E
	OFFSET_HIGH: .WORD 0x0000

IDTR:
	.WORD IDT_END - IDT_START - 1
	.LONG IDT_START

IDT_START:
.SPACE 2048
IDT_END:

.SECTION .rodata
	TEXT: .ASCIZ "hello jrodie!"
