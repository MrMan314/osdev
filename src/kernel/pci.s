.CODE32

.GLOBL PCI_TEST
.EXTERN PRINT
.EXTERN PRINT_HEX_8
.EXTERN PRINT_HEX_16
.EXTERN PRINT_HEX_32
.EXTERN CURSOR_MOVE
.EXTERN CURSOR_POSITION

PCI_TEST:
	MOV $0, %ECX
	ENUM:
	PUSH %ECX
	MOV %ECX, %EAX
	MOV $0x0F, %CH
	CALL PRINT_HEX_8
	LEA SEP2, %ESI
	CALL PRINT
	CALL PCI_CHECK_DEVICE
	JC .NEXT

	LEA SPACE, %ESI
	CALL PRINT
	CALL NL
	JMP .FIN

	.NEXT:
	MOV CURSOR_POSITION, %EDI
	SUB $6, %EDI
	CALL CURSOR_MOVE
	.FIN:
	POP %ECX
	INC %ECX
	CMP $4, %ECX
	JB ENUM
RET

PCI_CHECK_DEVICE:
	PUSHAL
	MOV 36(%ESP), %EAX
	// bus
	MOVZX %AH, %EDX
	PUSH %EDX
	// device
	MOVZX %AL, %EDX
	PUSH %EDX
	// function
	PUSHL $0
	// offset
	PUSHL $0
	CALL PCI_CFG_READ_LONG
	POP %EAX
	MOV $0x0F, %CH
	CMP $0xFFFFFFFF, %EAX
	JE .NOPRINT
	CALL PRINT_HEX_16
	SHR $16, %EAX
	LEA SEP, %ESI
	CALL PRINT
	CALL PRINT_HEX_16
	MOVL $0x0E, (%ESP)
	CALL PCI_CFG_READ_LONG
	POP %EAX
	AND $0x80, %AL
	JZ .NONMF

	.NONMF:
	ADD $16, %ESP
	JMP .DONE
	.NOPRINT:
	ADD $16, %ESP
	STC
	.DONE:
	POPAL
	RET

PCI_CFG_READ_LONG:
	PUSHAL
	MOV $0x80000000, %EAX

	// offset
	MOV 36(%ESP), %EDX
	OR %EDX, %EAX

	// function
	MOV 40(%ESP), %EDX
	SHL $8, %EDX
	OR %EDX, %EAX

	// device
	MOV 44(%ESP), %EDX
	SHL $11, %EDX
	OR %EDX, %EAX

	// bus
	MOV 48(%ESP), %EDX
	SHL $16, %EDX
	OR %EDX, %EAX

	MOV $0x0CF8, %DX
	OUT %EAX, %DX
	POPAL
	PUSH %EDX
	MOV $0x0CFC, %DX
	IN %DX, %EAX
	POP %EDX
	POP %EBX
	PUSH %EAX
	PUSH %EBX
	RET
.SECTION .rodata
	SEP: .ASCIZ ":"
	SEP2: .ASCIZ ": "
	SPACE: .ASCIZ " "